---
import { getSession } from 'auth-astro/server';

import CookiePrivacyBanner from '@/components/common/CookiePrivacyBanner.vue';
import Page from '@/components/common/Page.astro';
import NotificationList from '@/components/notification/NotificationList.vue';

const session = await getSession(Astro.request);
let initialNotifications = [];
let totalPages = 0;

const allowedEmails = import.meta.env.ALLOWED_EMAILS?.split(',').map((email: string) => email.trim()) || [];
const isLogin = !!session?.user?.email;
const isAllowedUser = isLogin && allowedEmails.includes(session?.user?.email);

if (isLogin && !isAllowedUser) {
  return Astro.redirect('/403');
}

if (isLogin) {
  const apiUrl = new URL('/api/notifications', Astro.url);
  apiUrl.searchParams.set('page', '1');
  apiUrl.searchParams.set('pageSize', '10');

  const response = await fetch(apiUrl, {
    headers: {
      Cookie: Astro.request.headers.get('Cookie') || '',
    },
  });

  if (response.ok) {
    const data = (await response.json()) as { notifications: any[]; totalPages: number; totalCount: number };
    const highlightedNotificationId = Astro.url.searchParams.get('notificationId');
    initialNotifications = data.notifications.map((notification) => ({
      ...notification,
      highlight: notification.id === highlightedNotificationId,
    }));
    totalPages = data.totalPages;
  } else {
    console.error('Error fetching initial notifications:', await response.text());
  }
}
---

<Page>
  <NotificationList
    client:load
    session={session?.user ? { user: { email: session.user.email ?? '', name: session.user.name ?? undefined } } : null}
    initialNotifications={initialNotifications}
    initialTotalPages={totalPages}
  />
  <CookiePrivacyBanner client:load />
</Page>
